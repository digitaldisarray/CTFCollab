// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/ctfs": {
            "post": {
                "description": "Creates a new CTF and returns its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ctfs"
                ],
                "summary": "Create a CTF",
                "parameters": [
                    {
                        "description": "CTF details",
                        "name": "ctf",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/db.CreateCTFParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\\\"ctf_id\\\": string}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/ctfs/{phrase}": {
            "put": {
                "description": "Updates CTF details by its mnemonic phrase",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ctfs"
                ],
                "summary": "Update CTF details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "CTF phrase",
                        "name": "phrase",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "CTF update parameters",
                        "name": "ctf",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/db.UpdateCTFParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a CTF by its mnemonic phrase",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ctfs"
                ],
                "summary": "Delete a CTF",
                "parameters": [
                    {
                        "type": "string",
                        "description": "CTF phrase",
                        "name": "phrase",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deleted",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/ctfs/{phrase}/challenges": {
            "get": {
                "description": "Returns all challenges for a specific CTF",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "challenges"
                ],
                "summary": "Get CTF challenges",
                "parameters": [
                    {
                        "type": "string",
                        "description": "CTF phrase",
                        "name": "phrase",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of challenges",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new challenge for a CTF",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "challenges"
                ],
                "summary": "Create a challenge",
                "parameters": [
                    {
                        "type": "string",
                        "description": "CTF phrase",
                        "name": "phrase",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Challenge details",
                        "name": "challenge",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/db.CreateChallengeParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Challenge created",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "db.CreateCTFParams": {
            "type": "object",
            "properties": {
                "author_id": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phrase": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                }
            }
        },
        "db.CreateChallengeParams": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "flag": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phrase": {
                    "type": "string"
                }
            }
        },
        "db.Ctf": {
            "type": "object",
            "properties": {
                "author_id": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "phrase": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                }
            }
        },
        "db.UpdateCTFParams": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phrase": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
