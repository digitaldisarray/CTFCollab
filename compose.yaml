services:
  api:
    restart: always
    build:
      context: ./backend
      dockerfile: Dockerfile
      args:
        MYSQL_URL: "${MYSQL_URL}"
    ports:
      - "1337:1337"
    env_file:
      - .env
    depends_on:
      db: # Make sure db starts before the api
        condition: service_healthy
  db:
    image: docker.io/library/mysql:latest
    restart: always
    env_file:
     - .env
    ports:
      - "3306:3306"
    volumes:
      - db-data:/var/lib/mysql
      - ./backend/db/migrations/scripts:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-p$MYSQL_ROOT_PASSWORD"]
      interval: 30s
      retries: 5
      start_period: 30s
      timeout: 10s
  frontend:
    build:
      dockerfile: Dockerfile
    #environment:
      #- NODE_ENV=production # Stops stack traces from appearing in browser
    ports:
      - "3000:3000"
    restart: unless-stopped
  hedgedoc:
    image: quay.io/hedgedoc/hedgedoc:1.10.0
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    ports:
      - "3001:3000"
    volumes:
      - hedgedoc-uploads:/hedgedoc/public/uploads
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/ || exit 1"]
      interval: 30s
      retries: 5
      timeout: 10s
volumes:
  db-data:
  hedgedoc-uploads: